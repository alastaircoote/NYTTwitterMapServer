// Generated by CoffeeScript 1.3.3
(function() {

  requirejs.config({
    baseUrl: "/",
    shim: {
      "jslib/leaflet": {
        deps: ["jquery"],
        exports: "L"
      },
      "jslib/jsbezier": {
        exports: "jsBezier"
      }
    },
    paths: {
      "jquery": "//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min",
      "socketio": "/socket.io/socket.io"
    }
  });

  requirejs(["./js/map/mapdisplay", "jquery"], function(MapDisplay) {
    var map;
    map = new MapDisplay($("#map"));
    return require(["socketio"], function() {
      var socket;
      socket = io.connect('http://' + window.location.hostname + ':6060');
      socket.on("connect", function() {
        return $("#liConnecting").html("<a>Connected, awaiting tweets</a>");
      });
      return socket.on("tweet", function(tweet) {
        var baseHue, from, li, location, textcolor, title, _ref, _ref1;
        $("#liConnecting").remove();
        baseHue = Math.floor(Math.random() * 30) * 12;
        map.drawLine(tweet.from, tweet.to, baseHue);
        title = "Could not trace to article";
        li = $("<li><a href='" + tweet.tweet.entities.urls[0].expanded_url + "' target='_blank'>" + tweet.tweet.text + "<p></p></a></li>");
        from = ((_ref = tweet.article) != null ? (_ref1 = _ref.geo_facet) != null ? _ref1[0] : void 0 : void 0) || "NYC (assumed)";
        textcolor = $.Color({
          hue: baseHue,
          saturation: 0.66,
          lightness: 0.43,
          alpha: 1
        }).toHexString();
        location = tweet.tweet.geo || tweet.tweet.user.location;
        $("p", li).html("<p style='color:" + textcolor + "'>" + from + " -> " + location);
        return li.insertAfter($("#header"));
      });
    });
  });

}).call(this);
