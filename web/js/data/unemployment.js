// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["../struct/events"], function(Events) {
    var UnemploymentData;
    return UnemploymentData = (function(_super) {

      __extends(UnemploymentData, _super);

      function UnemploymentData() {
        this.getNext = __bind(this.getNext, this);

        this.loadData = __bind(this.loadData, this);
        UnemploymentData.__super__.constructor.call(this);
        this.loadData();
        this.years = [];
        this.periods = null;
        this.yearIndex = -1;
        this.periodIndex = 9999;
      }

      UnemploymentData.prototype.loadData = function() {
        var _this = this;
        return $.ajax({
          url: "/TwitterMap/dummydata/plv82.json",
          dataType: "json",
          success: function(data) {
            var key, val, _ref;
            _this.points = data.areas;
            _this.data = data.data;
            _ref = _this.data;
            for (key in _ref) {
              val = _ref[key];
              _this.years.push(key);
            }
            return _this.trigger("loaded");
          }
        });
      };

      UnemploymentData.prototype.getNext = function() {
        var currentYear, key, periodToGet, val, yearToGet;
        if (this.periodIndex >= 11) {
          this.yearIndex++;
          currentYear = this.data[this.years[this.yearIndex]];
          this.periods = [];
          for (key in currentYear) {
            val = currentYear[key];
            this.periods.push(key);
          }
          this.periodIndex = 0;
        } else {
          if (this.periodIndex === 9 && this.yearIndex === 4) {
            return false;
          }
          this.periodIndex++;
        }
        yearToGet = this.years[this.yearIndex];
        periodToGet = this.periods[this.periodIndex];
        return {
          data: this.data[yearToGet][periodToGet],
          year: yearToGet,
          period: periodToGet
        };
      };

      return UnemploymentData;

    })(Events);
  });

}).call(this);
